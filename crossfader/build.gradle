apply plugin: 'com.android.library'
apply plugin: 'org.greenrobot.greendao'
apply plugin: 'com.github.dcendents.android-maven'
apply plugin: 'com.jfrog.bintray'

// 这个version是library的版本，更新后也需要更改这个值
version = "0.0.1"


android {
    compileSdkVersion 24
    buildToolsVersion "25.0.0"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 24
        versionCode 1
        versionName "1.0"

        sourceSets.main {
            jniLibs.srcDir 'src/main/libs'
            jni.srcDirs = []
        }
    }

    signingConfigs {
        def Properties localProps = new Properties()
        localProps.load(new FileInputStream(file('../local.properties')))
        def Properties keyProps = new Properties()

        // 如果读取不到'keystore.props.file'属性，就使用debug keystore


        if (localProps['keystore.props.file']) {
            keyProps.load(new FileInputStream(file(localProps['keystore.props.file'])))
        } else {
            keyProps["store"] = 'cuieney.jks'
            keyProps["alias"] = 'cuieney'
            keyProps["storePass"] = '123456'
            keyProps["pass"] = '123456'
        }

        debug {
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }

        debug1 {
            storeFile file('cuieney.jks')
            keyAlias 'cuieney'
            storePassword '123456'
            keyPassword '123456'
        }

        release {
            // release版本使用assert确保存在该属性否则报错，避免错误打包
            assert localProps['keystore.props.file'];
            storeFile file(keyProps["store"])
            keyAlias keyProps["alias"]
            storePassword keyProps["storePass"]
            keyPassword keyProps["pass"]
        }

        release1 {
            storeFile file('cuieney.jks')
            keyAlias 'cuieney'
            storePassword '123456'
            keyPassword '123456'
        }
    }

    buildTypes {
        debug {
            minifyEnabled false  //代码混淆处理
            shrinkResources false //删除没用的资源
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.debug1
        }

        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release1
        }
    }

    task ndkBuild(type: Exec) {
        Properties properties = new Properties()
        properties.load(project.rootProject.file('local.properties').newDataInputStream())
        def ndkDir = properties.getProperty('ndk.dir')
        commandLine "$ndkDir/ndk-build", '-B', '-C', file('src/main/jni').absolutePath
        // Windows users: commandLine "$ndkDir\\ndk-build.cmd", '-B', '-C', file('src/main/jni').absolutePath
    }

    lintOptions {
        abortOnError false
    }

    tasks.withType(JavaCompile) {
        compileTask -> compileTask.dependsOn ndkBuild
    }


    greendao {
        schemaVersion 1
        daoPackage 'com.feetsdk.android.feetsdk.db.domain'
        targetGenDir 'src/main/java'
    }
}

dependencies {
    compile fileTree(include: ['*.jar'], dir: 'libs')
    testCompile 'junit:junit:4.12'
    compile 'com.android.support:appcompat-v7:24.2.1'
    compile 'com.liulishuo.filedownloader:library:1.0.2'
    compile 'org.greenrobot:greendao:3.1.1'
}

def siteUrl = 'https://github.com/Cuieney/Crossfader'   // 项目的主页
def gitUrl = 'https://github.com/Cuieney/Crossfader.git'   // Git仓库的url
group = "com.cuieneylibrary.crossfader"            // Maven Group ID for the artifact，
install {
    repositories.mavenInstaller {
        // This generates POM.xml with proper parameters
        pom {
            project {
                packaging 'aar'
                // Add your description here
                name 'Let the music to keep up with your tempo'     //项目的描述 你可以多写一点
                url siteUrl
                // Set your license
                licenses {
                    license {
                        name 'The Apache Software License, Version 2.0'
                        url 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                    }
                }
                developers {
                    developer {
                        id 'cuieney'        //填写的一些基本信息
                        name 'cuieney'
                        email 'cuieney@163.com'
                    }
                }
                scm {
                    connection gitUrl
                    developerConnection gitUrl
                    url siteUrl
                }
            }
        }
    }
}
task sourcesJar(type: Jar) {
    from android.sourceSets.main.java.srcDirs
    classifier = 'sources'
}
//task javadoc(type: Javadoc) {
//options.encoding = 'UTF-8'
//    source = android.sourceSets.main.java.srcDirs
//    classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
//}
//task javadocJar(type: Jar, dependsOn: javadoc) {
//    classifier = 'javadoc'
//    from javadoc.destinationDir
//}
artifacts {
//    archives javadocJar
    archives sourcesJar
}
Properties properties = new Properties()
//读取properties的配置信息，当然直接把信息写到代码里也是可以的
properties.load(project.rootProject.file('local.properties').newDataInputStream())
bintray {
    user = properties.getProperty("bintray.user")
    key = properties.getProperty("bintray.apikey")
    configurations = ['archives']
    pkg {
        userOrg="cuieneymaster"
        repo = "test"          //这个应该是传到maven的仓库的
        name = "crossfader"    //发布的项目名字
        websiteUrl = siteUrl
        vcsUrl = gitUrl
        licenses = ["Apache-2.0"]
        publish = true
    }
}
